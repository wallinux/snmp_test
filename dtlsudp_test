#!/bin/bash

[ -z "$TCPDUMP" ] && TCPDUMP=no
#HOST=[::1]
[ -z "$HOST" ] && HOST=127.0.0.1
[ -z "$PORT" ] && PORT=10161

TESTDIR=/tmp/test
CERTDIR=/tmp/cert

TESTUSER=testuser
TESTHOSTNAME=e.prime.com
TESTCA=ca.prime.org

SERVER=dtlsudp:$HOST:$PORT
OID=.1.3.6.1.2.1.1.6.0

SNMPD_CONF=$TESTDIR/snmpd.conf
SNMPD_LOG=$TESTDIR/snmpd.log
SNMPD_PID=$TESTDIR/snmpd.pid

SNMP_CONF=$TESTDIR/snmp.conf

NOTE='echo -e \n--- '
NET_SNMP_CERT=net-snmp-cert

#SNMP_DEBUG=-Ddtlsudp -d
SNMPGET="snmpget $SNMP_DEBUG -On"
SNMPSET="snmpset $SNMP_DEBUG -On"

TCPDUMP_CAP=$TESTDIR/tcpdump.cap
function tcpdump_capture ()
{
    interface=$1
    rotate_seconds=$2
    filecount=1

    if [ "$TCPDUMP" == "yes" ]; then
	tcpdump -G $rotate_seconds -W $filecount -w $TCPDUMP_CAP -i $interface &
	sleep 1
    fi
}

function tcpdump_read ()
{
    if [ "$TCPDUMP" == "yes" ]; then
	sleep $1
	# workaround: need a last package to close the tcpdump capture
	ping6 -c 1 ::1 >/dev/null
	tcpdump -T snmp -r $TCPDUMP_CAP port $PORT
    fi
}

function create_cert ()
{
    $NOTE $FUNCNAME
    if [ ! -d $CERTDIR ]; then
	$NET_SNMP_CERT genca -I --cn $TESTCA -C $CERTDIR
	$NET_SNMP_CERT gencert -I -t snmpd --with-ca $TESTCA --cn $TESTHOSTNAME -C $CERTDIR
	$NET_SNMP_CERT gencert -I -t snmpapp --cn $TESTUSER -C $CERTDIR
	chmod 755 $CERTDIR/tls $CERTDIR/tls/ca-certs $CERTDIR/tls/certs
	chmod a+r $CERTDIR/tls/ca-certs/* $CERTDIR/tls/certs/*
    fi
}

function get_cert ()
{
    $NOTE $FUNCNAME

    serverCert=$($NET_SNMP_CERT showcert --fingerprint --brief snmpd -C $CERTDIR)
    appCert=$($NET_SNMP_CERT showcert --fingerprint --brief snmpapp -C $CERTDIR)
    caCert=$($NET_SNMP_CERT showcas --fingerprint --brief $TESTCA -C $CERTDIR)

    echo serverCert: $serverCert
    echo appCert:    $appCert
    echo caCert:     $caCert
}


function create_snmpd_conf ()
{
    $NOTE $FUNCNAME

    if [ ! -e $SNMPD_CONF ]; then
	mkdir -p $TESTDIR
	echo "[snmp] localCert $serverCert" > $SNMPD_CONF
	echo "certSecName 10 $appCert --cn" >> $SNMPD_CONF
#	echo "certSecName 20 $appCert --sn snmpapp" >> $SNMPD_CONF
	echo "rwuser -s tsm $TESTUSER authpriv" >>$SNMPD_CONF
    fi
    echo --- $SNMPD_CONF
    cat $SNMPD_CONF
}

function create_snmp_conf ()
{
    $NOTE $FUNCNAME

    if [ ! -e $SNMP_CONF ]; then
	echo "localCert $appCert" > $SNMP_CONF
    fi
    
    echo --- $SNMP_CONF
    cat $SNMP_CONF
}

function prepare ()
{
    create_cert
    get_cert
    create_snmpd_conf
    create_snmp_conf
}

function export_env ()
{
    $NOTE $FUNCNAME

    export SNMP_PERSISTENT_DIR=$TESTDIR/persist
    export SNMPCONFPATH=$TESTDIR:$CERTDIR:$SNMP_PERSISTENT_DIR
    mkdir -p $SNMP_PERSISTENT_DIR
}

function start_snmpd ()
{
    $NOTE $FUNCNAME

    #snmpd_debug="-d -Ddtlsudp"
    
    snmpd $snmpd_debug -U -p $SNMPD_PID -Lf $SNMPD_LOG -C -c $SNMPD_CONF $SERVER
    ps -ef | grep snmpd

    cat $SNMPD_LOG
}

function test1 ()
{
    $NOTE $FUNCNAME their_identity=$serverCert

    $SNMPSET -T their_identity=$serverCert $SERVER $OID s 'fingerprintIdentity'
    $SNMPGET -T their_identity=$serverCert $SERVER $OID
}


function test2 ()
{
    $NOTE $FUNCNAME their_identity=snmpd

    $SNMPSET -T their_identity=snmpd $SERVER $OID s 'filenameIdentity'
    $SNMPGET -T their_identity=snmpd $SERVER $OID
}

function test3 ()
{
    $NOTE $FUNCNAME trust_cert=$caCert -T their_hostname=$TESTHOSTNAME

    $SNMPSET -T trust_cert=$caCert -T their_hostname=$TESTHOSTNAME $SERVER $OID s 'hostnameIdentity'
    $SNMPGET -T trust_cert=$caCert -T their_hostname=$TESTHOSTNAME $SERVER $OID
}

######################################################################
# main

killall snmpd

prepare
export_env
start_snmpd

tcpdump_capture lo 4
test1
tcpdump_read 4

test2
test3

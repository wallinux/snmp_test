#!/bin/sh

[ "$DISTRO"     = "" ] && DISTRO=ubuntu
[ "$DISTRO_TAG" = "" ] && DISTRO_TAG=16.04
DISTRO_NAME=${DISTRO}_${DISTRO_TAG}

if [ "$#" -ne "2" ]; then
    SNMP_TAG=AW_master
else
    SNMP_TAG=$2
fi

SNMP_IMAGE=wallinux/snmp_${DISTRO_NAME}:${SNMP_TAG}
SNMP_CONTAINER_0= ${SNMP_TAG}.snmp_0_${DISTRO_NAME}
SNMP_CONTAINER_1= ${SNMP_TAG}.snmp_1_${DISTRO_NAME}

function create_container ()
{
    container=$1
    echo "create and start $container"
    
    docker create -P --name=$container \
	   -h $container.eprime.com \
	   --network=snmp_network_1 \
	   --dns=8.8.8.8 \
	   --privileged=true \
	   -i $SNMP_IMAGE
    host_timezone=$(cat /etc/timezone)
    docker start $container
    docker exec -u root $container \
	   sh -c "echo $host_timezone >/etc/timezone && ln -sf /usr/share/zoneinfo/$host_timezone /etc/localtime && dpkg-reconfigure -f noninteractive tzdata"
    docker exec $container \
	   sh -c "if [ ! -e /root/.ssh/id_rsa ]; then ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ''; fi"
    docker exec $container \
	   sh -c "git clone https://github.com/wallinux/snmp_test.git"
    docker exec -it $container sh -c "/etc/init.d/ssh start"
}

function pull ()
{
    docker pull $SNMP_IMAGE
}

function start ()
{
    echo "create snmp_network_1 and snmp_network_2"
    docker network create --ipv6 --driver=bridge snmp_network_1 --subnet=172.19.0.0/24 --subnet=2001:db8:2::/64
    docker network create --ipv6 --driver=bridge snmp_network_2 --subnet=172.19.1.0/24 --subnet=2001:db8:3::/64

    create_container $SNMP_CONTAINER_0
    create_container $SNMP_CONTAINER_1
}

function stop ()
{
    echo "stop $SNMP_CONTAINER_0 and $SNMP_CONTAINER_1"
    docker stop $SNMP_CONTAINER_0
    docker stop $SNMP_CONTAINER_1

    docker rm $SNMP_CONTAINER_0
    docker rm $SNMP_CONTAINER_1

    echo "removing snmp_network_1 and snmp_network_2"
    docker network rm snmp_network_1
    docker network rm snmp_network_2
}

function shell ()
{
    docker exec -it $SNMP_CONTAINER_0 sh -c "/bin/bash"
}

function terminal ()
{
    gnome-terminal --command "docker exec -it $SNMP_CONTAINER_0 sh -c \"/bin/bash\"" &
}

function test1 ()
{
    docker exec -it $SNMP_CONTAINER_0 bash -c "cd snmp_test; source ./docker_config; ./snmp_test -h; ./snmp_test -C"
}

function test2 ()
{
    docker exec -it $SNMP_CONTAINER_0 bash -c "cd snmp_test; source ./docker_config; ./snmp_test_trap -h; ./snmp_test_trap -C remote"
}

function help ()
{
    echo "$0 <start|stop|shell|terminal|test> [tag]"
    echo " pull:     pull image from $SNMP_IMAGE"
    echo " start:    start containers ($SNMP_CONTAINER_0 & $SNMP_CONTAINER_1)"
    echo " stop:     stop  containers ($SNMP_CONTAINER_0 & $SNMP_CONTAINER_1)"
    echo " shell:    connect to container ($SNMP_CONTAINER_0)"
    echo " terminal: start gnome-terminal and connect to container ($SNMP_CONTAINER_0)"
    echo " test1:    run a simple snmp test in container"
    echo " test2:    run a simple snmp trap test in container"
    echo " help:     print this text"
}

if [ $# -eq 0 ]; then
    help
else
    $1
fi
